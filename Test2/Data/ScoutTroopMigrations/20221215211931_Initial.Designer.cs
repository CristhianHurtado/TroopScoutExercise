// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test2.Data;

#nullable disable

namespace Test2.Data.ScoutTroopMigrations
{
    [DbContext(typeof(ScoutTroopContext))]
    [Migration("20221215211931_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("Test2.Models.Achievement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BV")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoutID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ScoutID");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Test2.Models.Scout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<double>("FeePaid")
                        .HasColumnType("REAL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("TroopID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TroopID");

                    b.HasIndex("FirstName", "LastName", "DOB")
                        .IsUnique();

                    b.ToTable("Scouts");
                });

            modelBuilder.Entity("Test2.Models.ScoutPhoto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("ScoutID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ScoutID")
                        .IsUnique();

                    b.ToTable("scoutPhotos");
                });

            modelBuilder.Entity("Test2.Models.ScoutThumbnail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("ScoutID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ScoutID")
                        .IsUnique();

                    b.ToTable("scoutThumbnails");
                });

            modelBuilder.Entity("Test2.Models.Troop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<double>("TroopBudget")
                        .HasColumnType("REAL");

                    b.Property<string>("TroopName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TroopNumber")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TroopNumber")
                        .IsUnique();

                    b.ToTable("Troops");
                });

            modelBuilder.Entity("Test2.ViewModels.AchievementSummaryVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageLS")
                        .HasColumnType("REAL");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<double>("MaxEO")
                        .HasColumnType("REAL");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalHL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TroopName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("AchievementSummaryVM");
                });

            modelBuilder.Entity("Test2.Models.Achievement", b =>
                {
                    b.HasOne("Test2.Models.Scout", "Scout")
                        .WithMany("Achievements")
                        .HasForeignKey("ScoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scout");
                });

            modelBuilder.Entity("Test2.Models.Scout", b =>
                {
                    b.HasOne("Test2.Models.Troop", "Troop")
                        .WithMany("Scouts")
                        .HasForeignKey("TroopID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Troop");
                });

            modelBuilder.Entity("Test2.Models.ScoutPhoto", b =>
                {
                    b.HasOne("Test2.Models.Scout", "scout")
                        .WithOne("ScoutPhoto")
                        .HasForeignKey("Test2.Models.ScoutPhoto", "ScoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("scout");
                });

            modelBuilder.Entity("Test2.Models.ScoutThumbnail", b =>
                {
                    b.HasOne("Test2.Models.Scout", "scout")
                        .WithOne("ScoutThumbnail")
                        .HasForeignKey("Test2.Models.ScoutThumbnail", "ScoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("scout");
                });

            modelBuilder.Entity("Test2.Models.Scout", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("ScoutPhoto");

                    b.Navigation("ScoutThumbnail");
                });

            modelBuilder.Entity("Test2.Models.Troop", b =>
                {
                    b.Navigation("Scouts");
                });
#pragma warning restore 612, 618
        }
    }
}
